# Generated by Django 5.0.8 on 2024-12-21 18:01

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Activitylogs",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "modulename",
                    models.TextField(blank=True, db_column="ModuleName", null=True),
                ),
                ("action", models.TextField(blank=True, db_column="Action", null=True)),
                ("data", models.TextField(blank=True, db_column="Data", null=True)),
                ("regdata", models.DateTimeField(db_column="RegData")),
            ],
            options={
                "db_table": "ActivityLogs",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Alertmasters",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "alertname",
                    models.TextField(blank=True, db_column="AlertName", null=True),
                ),
                (
                    "alertinfo",
                    models.TextField(blank=True, db_column="AlertInfo", null=True),
                ),
                (
                    "alertstatus",
                    models.CharField(
                        blank=True, db_column="AlertStatus", max_length=1, null=True
                    ),
                ),
                ("regdate", models.DateTimeField(db_column="RegDate")),
            ],
            options={
                "db_table": "AlertMasters",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Anprstatus",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "cameraname",
                    models.TextField(blank=True, db_column="CameraName", null=True),
                ),
                ("url", models.TextField(blank=True, db_column="URL", null=True)),
                ("status", models.IntegerField(db_column="Status")),
                ("regdate", models.DateTimeField(db_column="RegDate")),
            ],
            options={
                "db_table": "ANPRStatus",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Aspnetroleclaims",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "claimtype",
                    models.TextField(blank=True, db_column="ClaimType", null=True),
                ),
                (
                    "claimvalue",
                    models.TextField(blank=True, db_column="ClaimValue", null=True),
                ),
            ],
            options={
                "db_table": "AspNetRoleClaims",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Aspnetroles",
            fields=[
                (
                    "id",
                    models.CharField(
                        db_column="Id",
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, db_column="Name", max_length=256, null=True
                    ),
                ),
                (
                    "normalizedname",
                    models.CharField(
                        blank=True,
                        db_column="NormalizedName",
                        max_length=256,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "concurrencystamp",
                    models.TextField(
                        blank=True, db_column="ConcurrencyStamp", null=True
                    ),
                ),
            ],
            options={
                "db_table": "AspNetRoles",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Aspnetuserclaims",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "claimtype",
                    models.TextField(blank=True, db_column="ClaimType", null=True),
                ),
                (
                    "claimvalue",
                    models.TextField(blank=True, db_column="ClaimValue", null=True),
                ),
            ],
            options={
                "db_table": "AspNetUserClaims",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Aspnetuserlogins",
            fields=[
                (
                    "loginprovider",
                    models.CharField(
                        db_column="LoginProvider",
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "providerkey",
                    models.CharField(db_column="ProviderKey", max_length=255),
                ),
                (
                    "providerdisplayname",
                    models.TextField(
                        blank=True, db_column="ProviderDisplayName", null=True
                    ),
                ),
            ],
            options={
                "db_table": "AspNetUserLogins",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Aspnetusers",
            fields=[
                (
                    "id",
                    models.CharField(
                        db_column="Id",
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("status", models.IntegerField(db_column="Status")),
                (
                    "username",
                    models.CharField(
                        blank=True, db_column="UserName", max_length=256, null=True
                    ),
                ),
                (
                    "normalizedusername",
                    models.CharField(
                        blank=True,
                        db_column="NormalizedUserName",
                        max_length=256,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "email",
                    models.CharField(
                        blank=True, db_column="Email", max_length=256, null=True
                    ),
                ),
                (
                    "normalizedemail",
                    models.CharField(
                        blank=True,
                        db_column="NormalizedEmail",
                        max_length=256,
                        null=True,
                    ),
                ),
                ("emailconfirmed", models.IntegerField(db_column="EmailConfirmed")),
                (
                    "passwordhash",
                    models.TextField(blank=True, db_column="PasswordHash", null=True),
                ),
                (
                    "securitystamp",
                    models.TextField(blank=True, db_column="SecurityStamp", null=True),
                ),
                (
                    "concurrencystamp",
                    models.TextField(
                        blank=True, db_column="ConcurrencyStamp", null=True
                    ),
                ),
                (
                    "phonenumber",
                    models.TextField(blank=True, db_column="PhoneNumber", null=True),
                ),
                (
                    "phonenumberconfirmed",
                    models.IntegerField(db_column="PhoneNumberConfirmed"),
                ),
                ("twofactorenabled", models.IntegerField(db_column="TwoFactorEnabled")),
                (
                    "lockoutend",
                    models.DateTimeField(blank=True, db_column="LockoutEnd", null=True),
                ),
                ("lockoutenabled", models.IntegerField(db_column="LockoutEnabled")),
                (
                    "accessfailedcount",
                    models.IntegerField(db_column="AccessFailedCount"),
                ),
            ],
            options={
                "db_table": "AspNetUsers",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Efmigrationshistory",
            fields=[
                (
                    "migrationid",
                    models.CharField(
                        db_column="MigrationId",
                        max_length=150,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "productversion",
                    models.CharField(db_column="ProductVersion", max_length=32),
                ),
            ],
            options={
                "db_table": "__EFMigrationsHistory",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Groups",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "name",
                    models.CharField(db_column="Name", max_length=255, unique=True),
                ),
                (
                    "description",
                    models.TextField(blank=True, db_column="Description", null=True),
                ),
                ("status", models.IntegerField(db_column="Status")),
                ("regdate", models.DateTimeField(db_column="RegDate")),
            ],
            options={
                "db_table": "Groups",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Nvr",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        db_column="Name",
                        max_length=255,
                        null=True,
                        unique=True,
                    ),
                ),
                ("nvrip", models.TextField(blank=True, db_column="NVRIP", null=True)),
                ("port", models.IntegerField(db_column="Port")),
                (
                    "username",
                    models.TextField(blank=True, db_column="Username", null=True),
                ),
                (
                    "password",
                    models.TextField(blank=True, db_column="Password", null=True),
                ),
                (
                    "nvrtype",
                    models.TextField(blank=True, db_column="NVRType", null=True),
                ),
                ("model", models.TextField(blank=True, db_column="Model", null=True)),
                (
                    "location",
                    models.TextField(blank=True, db_column="Location", null=True),
                ),
                ("make", models.TextField(blank=True, db_column="Make", null=True)),
                ("zone", models.TextField(blank=True, db_column="Zone", null=True)),
                ("status", models.IntegerField(db_column="Status")),
                ("regdate", models.DateTimeField(db_column="RegDate")),
                ("img", models.TextField(blank=True, db_column="IMG", null=True)),
                (
                    "responsible_person",
                    models.TextField(
                        blank=True, db_column="Responsible_Person", null=True
                    ),
                ),
            ],
            options={
                "db_table": "NVR",
            },
        ),
        migrations.CreateModel(
            name="Profiles",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                ("name", models.TextField(blank=True, db_column="Name", null=True)),
                ("status", models.IntegerField(db_column="Status")),
                ("regdate", models.DateTimeField(db_column="RegDate")),
            ],
            options={
                "db_table": "Profiles",
            },
        ),
        migrations.CreateModel(
            name="Roles",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        db_column="Name",
                        max_length=255,
                        null=True,
                        unique=True,
                    ),
                ),
                ("status", models.IntegerField(db_column="Status")),
                ("regdate", models.DateTimeField(db_column="RegDate")),
            ],
            options={
                "db_table": "Roles",
            },
        ),
        migrations.CreateModel(
            name="Aspnetuserroles",
            fields=[
                (
                    "userid",
                    models.OneToOneField(
                        db_column="UserId",
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="app.aspnetusers",
                    ),
                ),
            ],
            options={
                "db_table": "AspNetUserRoles",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Aspnetusertokens",
            fields=[
                (
                    "userid",
                    models.OneToOneField(
                        db_column="UserId",
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="app.aspnetusers",
                    ),
                ),
                (
                    "loginprovider",
                    models.CharField(db_column="LoginProvider", max_length=255),
                ),
                ("name", models.CharField(db_column="Name", max_length=255)),
                ("value", models.TextField(blank=True, db_column="Value", null=True)),
            ],
            options={
                "db_table": "AspNetUserTokens",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Cameras",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        db_column="Name",
                        max_length=255,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "cameraip",
                    models.CharField(
                        blank=True,
                        db_column="CameraIP",
                        max_length=255,
                        null=True,
                        unique=True,
                    ),
                ),
                ("area", models.TextField(blank=True, db_column="Area", null=True)),
                (
                    "location",
                    models.TextField(blank=True, db_column="Location", null=True),
                ),
                ("brand", models.TextField(blank=True, db_column="Brand", null=True)),
                (
                    "manufacture",
                    models.TextField(blank=True, db_column="Manufacture", null=True),
                ),
                (
                    "macaddress",
                    models.TextField(blank=True, db_column="MacAddress", null=True),
                ),
                ("make", models.TextField(blank=True, db_column="Make", null=True)),
                ("port", models.IntegerField(blank=True, db_column="Port", null=True)),
                (
                    "channelid",
                    models.IntegerField(blank=True, db_column="ChannelId", null=True),
                ),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True,
                        db_column="Latitude",
                        decimal_places=30,
                        max_digits=65,
                        null=True,
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True,
                        db_column="Longitude",
                        decimal_places=30,
                        max_digits=65,
                        null=True,
                    ),
                ),
                (
                    "installationdate",
                    models.DateTimeField(
                        blank=True, db_column="InstallationDate", null=True
                    ),
                ),
                (
                    "lastlive",
                    models.DateTimeField(blank=True, db_column="LastLive", null=True),
                ),
                (
                    "rtspurl",
                    models.TextField(blank=True, db_column="RTSPURL", null=True),
                ),
                (
                    "pincode",
                    models.IntegerField(blank=True, db_column="PinCode", null=True),
                ),
                (
                    "isrecording",
                    models.IntegerField(blank=True, db_column="isRecording", null=True),
                ),
                (
                    "isstreaming",
                    models.IntegerField(blank=True, db_column="isStreaming", null=True),
                ),
                (
                    "isanpr",
                    models.IntegerField(blank=True, db_column="isANPR", null=True),
                ),
                ("status", models.IntegerField(db_column="Status")),
                (
                    "updatedate",
                    models.DateTimeField(blank=True, db_column="UpdateDate", null=True),
                ),
                ("regdate", models.DateTimeField(db_column="RegDate")),
                (
                    "groupid",
                    models.ForeignKey(
                        db_column="GroupId",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.groups",
                    ),
                ),
                (
                    "nvrid",
                    models.ForeignKey(
                        db_column="NVRId",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.nvr",
                    ),
                ),
            ],
            options={
                "db_table": "Cameras",
            },
        ),
        migrations.CreateModel(
            name="Features",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                ("name", models.TextField(blank=True, db_column="Name", null=True)),
                ("status", models.IntegerField(db_column="Status")),
                ("regdate", models.DateTimeField(db_column="RegDate")),
                (
                    "profileid",
                    models.ForeignKey(
                        db_column="ProfileId",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.profiles",
                    ),
                ),
            ],
            options={
                "db_table": "Features",
            },
        ),
        migrations.CreateModel(
            name="Users",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "firstname",
                    models.TextField(blank=True, db_column="FirstName", null=True),
                ),
                (
                    "lastname",
                    models.TextField(blank=True, db_column="LastName", null=True),
                ),
                (
                    "mobileno",
                    models.CharField(
                        blank=True,
                        db_column="MobileNo",
                        max_length=255,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "emailid",
                    models.CharField(
                        blank=True,
                        db_column="EmailId",
                        max_length=255,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        blank=True,
                        db_column="Username",
                        max_length=255,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "password",
                    models.TextField(blank=True, db_column="Password", null=True),
                ),
                ("image", models.TextField(blank=True, db_column="Image", null=True)),
                ("status", models.IntegerField(db_column="Status")),
                ("regdate", models.DateTimeField(db_column="RegDate")),
                (
                    "roleid",
                    models.ForeignKey(
                        db_column="RoleId",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.roles",
                    ),
                ),
            ],
            options={
                "db_table": "Users",
            },
        ),
        migrations.CreateModel(
            name="Usercamerapermissions",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                ("status", models.IntegerField(db_column="Status")),
                ("regdate", models.DateTimeField(db_column="RegDate")),
                (
                    "cameraid",
                    models.ForeignKey(
                        db_column="CameraId",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.cameras",
                    ),
                ),
                (
                    "userid",
                    models.ForeignKey(
                        db_column="UserId",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.users",
                    ),
                ),
            ],
            options={
                "db_table": "UserCameraPermissions",
            },
        ),
        migrations.AddField(
            model_name="roles",
            name="userid",
            field=models.ForeignKey(
                db_column="UserId",
                on_delete=django.db.models.deletion.CASCADE,
                to="app.users",
            ),
        ),
        migrations.CreateModel(
            name="Readedvehiclenoplates",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "framepath",
                    models.TextField(blank=True, db_column="FramePath", null=True),
                ),
                (
                    "platepath",
                    models.TextField(blank=True, db_column="PlatePath", null=True),
                ),
                ("text", models.TextField(db_column="Text")),
                ("regdate", models.DateTimeField(db_column="RegDate")),
                (
                    "cameraid",
                    models.ForeignKey(
                        db_column="CameraId",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.cameras",
                    ),
                ),
                (
                    "userid",
                    models.ForeignKey(
                        db_column="UserId",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.users",
                    ),
                ),
            ],
            options={
                "db_table": "ReadedVehicleNoPlates",
            },
        ),
        migrations.AddField(
            model_name="profiles",
            name="userid",
            field=models.ForeignKey(
                db_column="UserId",
                on_delete=django.db.models.deletion.CASCADE,
                to="app.users",
            ),
        ),
        migrations.CreateModel(
            name="Profileandfeatures",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                ("featureid", models.IntegerField(db_column="FeatureId")),
                ("status", models.IntegerField(db_column="Status")),
                ("regdate", models.DateTimeField(db_column="RegDate")),
                (
                    "featuresid",
                    models.ForeignKey(
                        blank=True,
                        db_column="FeaturesId",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.features",
                    ),
                ),
                (
                    "profileid",
                    models.ForeignKey(
                        db_column="ProfileId",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.profiles",
                    ),
                ),
                (
                    "userid",
                    models.ForeignKey(
                        db_column="UserId",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.users",
                    ),
                ),
            ],
            options={
                "db_table": "ProfileAndFeatures",
            },
        ),
        migrations.AddField(
            model_name="nvr",
            name="userid",
            field=models.ForeignKey(
                db_column="UserId",
                on_delete=django.db.models.deletion.CASCADE,
                to="app.users",
            ),
        ),
        migrations.CreateModel(
            name="Numberplatedetections",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "platepath",
                    models.TextField(blank=True, db_column="PlatePath", null=True),
                ),
                ("regdate", models.DateTimeField(db_column="RegDate")),
                (
                    "cameraid",
                    models.ForeignKey(
                        db_column="CameraId",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.cameras",
                    ),
                ),
                (
                    "userid",
                    models.ForeignKey(
                        db_column="UserId",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.users",
                    ),
                ),
            ],
            options={
                "db_table": "NumberPlateDetections",
            },
        ),
        migrations.CreateModel(
            name="Multcameras",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                ("name", models.TextField(db_column="Name")),
                ("rtspurl", models.TextField(db_column="RTSPURL")),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True,
                        db_column="Latitude",
                        decimal_places=30,
                        max_digits=65,
                        null=True,
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True,
                        db_column="Longitude",
                        decimal_places=30,
                        max_digits=65,
                        null=True,
                    ),
                ),
                (
                    "userid",
                    models.ForeignKey(
                        db_column="UserId",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.users",
                    ),
                ),
            ],
            options={
                "db_table": "MultCameras",
            },
        ),
        migrations.CreateModel(
            name="Licenses",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                ("name", models.TextField(db_column="Name")),
                ("licensekey", models.TextField(db_column="LicenseKey")),
                ("productcode", models.TextField(db_column="ProductCode")),
                ("days", models.IntegerField(db_column="Days")),
                ("totalpc", models.IntegerField(db_column="TotalPC")),
                ("totalcamera", models.IntegerField(db_column="TotalCamera")),
                (
                    "description",
                    models.TextField(blank=True, db_column="Description", null=True),
                ),
                ("status", models.IntegerField(db_column="Status")),
                ("regdate", models.DateTimeField(db_column="RegDate")),
                (
                    "userid",
                    models.ForeignKey(
                        db_column="UserId",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.users",
                    ),
                ),
            ],
            options={
                "db_table": "Licenses",
            },
        ),
        migrations.CreateModel(
            name="Licenseactivations",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "machineip",
                    models.TextField(blank=True, db_column="MachineIP", null=True),
                ),
                ("expirydate", models.DateTimeField(db_column="ExpiryDate")),
                ("status", models.IntegerField(db_column="Status")),
                ("regdate", models.DateTimeField(db_column="RegDate")),
                (
                    "licenseid",
                    models.ForeignKey(
                        db_column="LicenseId",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.licenses",
                    ),
                ),
                (
                    "userid",
                    models.ForeignKey(
                        db_column="UserId",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.users",
                    ),
                ),
            ],
            options={
                "db_table": "LicenseActivations",
            },
        ),
        migrations.AddField(
            model_name="features",
            name="userid",
            field=models.ForeignKey(
                db_column="UserId",
                on_delete=django.db.models.deletion.CASCADE,
                to="app.users",
            ),
        ),
        migrations.CreateModel(
            name="Cameratrackingdatas",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "vichelimage",
                    models.TextField(blank=True, db_column="VichelImage", null=True),
                ),
                (
                    "noplateimage",
                    models.TextField(blank=True, db_column="NoPlateImage", null=True),
                ),
                (
                    "vichelno",
                    models.TextField(blank=True, db_column="VichelNo", null=True),
                ),
                ("status", models.IntegerField(db_column="Status")),
                ("regdate", models.DateTimeField(db_column="RegDate")),
                (
                    "cameraid",
                    models.ForeignKey(
                        db_column="CameraId",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.cameras",
                    ),
                ),
                (
                    "userid",
                    models.ForeignKey(
                        db_column="UserId",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.users",
                    ),
                ),
            ],
            options={
                "db_table": "CameraTrackingDatas",
            },
        ),
        migrations.AddField(
            model_name="cameras",
            name="userid",
            field=models.ForeignKey(
                db_column="UserId",
                on_delete=django.db.models.deletion.CASCADE,
                to="app.users",
            ),
        ),
        migrations.CreateModel(
            name="Camerarecords",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "recordpath",
                    models.TextField(blank=True, db_column="RecordPath", null=True),
                ),
                ("status", models.IntegerField(db_column="Status")),
                ("regdate", models.DateTimeField(db_column="RegDate")),
                (
                    "cameraid",
                    models.ForeignKey(
                        db_column="CameraId",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.cameras",
                    ),
                ),
                (
                    "userid",
                    models.ForeignKey(
                        db_column="UserId",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.users",
                    ),
                ),
            ],
            options={
                "db_table": "CameraRecords",
            },
        ),
        migrations.CreateModel(
            name="Cameraiplists",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "cameraip",
                    models.CharField(
                        blank=True,
                        db_column="CameraIP",
                        max_length=255,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "objectlist",
                    models.TextField(blank=True, db_column="ObjectList", null=True),
                ),
                ("regdate", models.DateTimeField(db_column="RegDate")),
                (
                    "userid",
                    models.ForeignKey(
                        db_column="UserId",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.users",
                    ),
                ),
            ],
            options={
                "db_table": "CameraIPLists",
            },
        ),
        migrations.CreateModel(
            name="Cameraalertstatuss",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                ("recording", models.IntegerField(db_column="Recording")),
                ("anpr", models.IntegerField(db_column="ANPR")),
                ("snapshot", models.IntegerField(db_column="Snapshot")),
                ("persondetection", models.IntegerField(db_column="PersonDetection")),
                ("firedetection", models.IntegerField(db_column="FireDetection")),
                ("animaldetection", models.IntegerField(db_column="AnimalDetection")),
                ("bikedetection", models.IntegerField(db_column="BikeDetection")),
                ("maskdetection", models.IntegerField(db_column="MaskDetection")),
                ("umbreladetection", models.IntegerField(db_column="UmbrelaDetection")),
                (
                    "brifecasedetection",
                    models.IntegerField(db_column="BrifecaseDetection"),
                ),
                ("garbagedetection", models.IntegerField(db_column="GarbageDetection")),
                ("weapondetection", models.IntegerField(db_column="WeaponDetection")),
                ("wrongdetection", models.IntegerField(db_column="WrongDetection")),
                ("queuedetection", models.IntegerField(db_column="QueueDetection")),
                ("smokedetection", models.IntegerField(db_column="SmokeDetection")),
                ("status", models.IntegerField(db_column="Status")),
                ("regdate", models.DateTimeField(db_column="RegDate")),
                (
                    "cameraid",
                    models.ForeignKey(
                        db_column="CameraId",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.cameras",
                    ),
                ),
                (
                    "userid",
                    models.ForeignKey(
                        db_column="UserId",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.users",
                    ),
                ),
            ],
            options={
                "db_table": "CameraAlertStatuss",
            },
        ),
        migrations.CreateModel(
            name="Cameraalerts",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "framepath",
                    models.TextField(blank=True, db_column="FramePath", null=True),
                ),
                (
                    "objectname",
                    models.TextField(blank=True, db_column="ObjectName", null=True),
                ),
                (
                    "objectcount",
                    models.IntegerField(blank=True, db_column="ObjectCount", null=True),
                ),
                (
                    "alertstatus",
                    models.CharField(
                        blank=True, db_column="AlertStatus", max_length=1, null=True
                    ),
                ),
                ("status", models.IntegerField(db_column="Status")),
                ("regdate", models.DateTimeField(db_column="RegDate")),
                (
                    "cameraid",
                    models.ForeignKey(
                        db_column="CameraId",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.cameras",
                    ),
                ),
                (
                    "userid",
                    models.ForeignKey(
                        db_column="UserId",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.users",
                    ),
                ),
            ],
            options={
                "db_table": "CameraAlerts",
            },
        ),
        migrations.CreateModel(
            name="Cameraactivities",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                ("activity", models.TextField(db_column="Activity")),
                ("status", models.IntegerField(db_column="Status")),
                ("regdate", models.DateTimeField(db_column="RegDate")),
                (
                    "cameraid",
                    models.ForeignKey(
                        db_column="CameraId",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.cameras",
                    ),
                ),
                (
                    "userid",
                    models.ForeignKey(
                        db_column="UserId",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.users",
                    ),
                ),
            ],
            options={
                "db_table": "CameraActivities",
            },
        ),
        migrations.CreateModel(
            name="Vehicledetections",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "framepath",
                    models.TextField(blank=True, db_column="FramePath", null=True),
                ),
                (
                    "vehicletype",
                    models.TextField(blank=True, db_column="VehicleType", null=True),
                ),
                ("regdate", models.DateTimeField(db_column="RegDate")),
                (
                    "cameraid",
                    models.ForeignKey(
                        db_column="CameraId",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.cameras",
                    ),
                ),
                (
                    "userid",
                    models.ForeignKey(
                        db_column="UserId",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.users",
                    ),
                ),
            ],
            options={
                "db_table": "VehicleDetections",
            },
        ),
        migrations.CreateModel(
            name="Videoanalytics",
            fields=[
                (
                    "id",
                    models.AutoField(db_column="Id", primary_key=True, serialize=False),
                ),
                (
                    "cameraip",
                    models.TextField(blank=True, db_column="CameraIP", null=True),
                ),
                (
                    "rtspurl",
                    models.TextField(blank=True, db_column="RTSPUrl", null=True),
                ),
                (
                    "objectlist",
                    models.TextField(blank=True, db_column="ObjectList", null=True),
                ),
                ("status", models.IntegerField(db_column="Status")),
                ("regdate", models.DateTimeField(db_column="RegDate")),
                (
                    "cameraid",
                    models.ForeignKey(
                        db_column="CameraId",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.cameras",
                    ),
                ),
                (
                    "userid",
                    models.ForeignKey(
                        db_column="UserId",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.users",
                    ),
                ),
            ],
            options={
                "db_table": "VideoAnalytics",
            },
        ),
    ]
